clc
clear
close all

Config;

load Zstate_VicPark_6898_loops

poseNum = 6897; % maximum 6897

odo = Zstate(Zstate(:,2)==1,[4,3,1]);
odo_idx = find(odo(:,2)==poseNum,1,"last");
Odo = odo(1:odo_idx,:);

obs = Zstate(Zstate(:,2)==2,[4,3,1]);
obs_idx = find(obs(:,1)==poseNum,1,"last");
Obs = obs(1:obs_idx,:);
feaIDs = unique(Obs(:,2));
feaNum = numel(feaIDs);

if ~exist(fullfile(pwd,'X_GNI.mat'),'file')
    %% Gauss-Newton Iteration finding revisited robot position

    % esitmate X state
    robPose_k = [0;0;0];
    robPose = zeros(3,2);

    feaPosis_k = [];
    feaPosis = Obs;

    for k = 0:poseNum
        if k ~= 0
            Odo_k = Odo(Odo(:,2)==k,3);
            robPose_k = [robPose_k(1:2,1)+Rot(robPose_k(3,1))*Odo_k(1:2,1);wrap(robPose_k(3,1)+Odo_k(3,1))];
            robPose = [robPose;k*ones(3,1),robPose_k];
        end

        Obs_k = Obs(Obs(:,1)==k,:);
        for kj = 1:(size(Obs_k,1)/2)
            Obs_kj = Obs_k((kj-1)*2+(1:2),:);
            feaPosi_kj = Rot(robPose_k(3,1))*Obs_kj(1:2,3)+ robPose_k(1:2,1);
            feaPosis_k = [feaPosis_k;feaPosi_kj];
        end
    end


    feaPosis(:,3) = feaPosis_k;

    [~, feaPosis_idx] = unique(feaPosis(:,2), 'first');
    feaPosi_idx = zeros(2*size(feaPosis_idx,1),1);
    for j = 1:size(feaPosis_idx,1)
        feaPosi_idx((j-1)*2+(1:2),1) = [feaPosis_idx(j,1);feaPosis_idx(j,1)+1];
    end
    feaPosi = feaPosis(feaPosi_idx,2:3);

    X = [ones(size(robPose,1)-3,1) robPose(4:end,:);2*ones(size(feaPosi,1),1) feaPosi];


    figure(1)
    hold on
    plot(robPose(1:3:(end-2),2),robPose(2:3:(end-1),2),'ro')
    hold off

    % Gauss-Newton Iteration start
    Z = [Odo;Obs];


    for i = 1:100
        FX_odo = [];
        FX_obs = [];

        FX = Z;
        Jab = sparse(size(Z,1),poseNum*3+feaNum*2);

        for k = 0:(poseNum-1)
            if k == 0
                Xrk1 = robPose(1:3,2);
                Xrk2 = X(X(:,1)==1 & X(:,2)==1,3);

                Jab(1:3,1:3) = ...
                    [Rot(Xrk1(3,1))',zeros(2,1); ...
                    0,0,1];
            else
                Xrk1 = X(X(:,1)==1 & X(:,2)==k,3);
                Xrk2 = X(X(:,1)==1 & X(:,2)==k+1,3);

                % Jab(k*3+(1:3),(k-1)*3+(1:6)) = ...
                %     [-Rot(Xrk1(3,1))',Rcon(-J*Rot(Xrk1(3,1))'*(Xrk2(1:2,1)-Xrk1(1:2,1)),CovT),Rot(Xrk1(3,1))',zeros(2,1); ...
                %     0,0,-1,0,0,1];
                Jab(k*3+(1:3),(k-1)*3+(1:6)) = ...
                    [-Rot(Xrk1(3,1))',-J*Rot(Xrk1(3,1))'*(Xrk2(1:2,1)-Xrk1(1:2,1)),Rot(Xrk1(3,1))',zeros(2,1); ...
                    0,0,-1,0,0,1];
            end

            FX_odo = [FX_odo;Rot(Xrk1(3,1))'*(Xrk2(1:2,1)-Xrk1(1:2,1));wrap(Xrk2(3,1)-Xrk1(3,1))];
        end



        for kj = 1:(size(Obs,1)/2)
            Obs_kj = Obs((kj-1)*2+(1:2),:);
            feakID = Obs_kj(1,2);
            robkID = Obs_kj(1,1);
            feakID_idx = find(feaIDs(:,1)==feakID);

            Xfj = X(X(:,1)==2 & X(:,2)==feakID,3);
            if robkID == 0
                Xrk = robPose(1:3,2);

                Jab(size(Odo,1)+(kj-1)*2+(1:2),size(Odo,1)+(feakID_idx-1)*2+(1:2)) = Rot(Xrk(3,1))';
            else
                Xrk = X(X(:,1)==1 & X(:,2)==robkID,3);

                % Jab(size(Odo,1)+(kj-1)*2+(1:2),(robkID-1)*3+(1:3)) = ...
                %     [-Rot(Xrk(3,1))',Rcon(-J*Rot(Xrk(3,1))'*(Xfj(1:2,1)-Xrk(1:2,1)),CovT)];
                Jab(size(Odo,1)+(kj-1)*2+(1:2),(robkID-1)*3+(1:3)) = ...
                    [-Rot(Xrk(3,1))',-J*Rot(Xrk(3,1))'*(Xfj(1:2,1)-Xrk(1:2,1))];

                Jab(size(Odo,1)+(kj-1)*2+(1:2),size(Odo,1)+(feakID_idx-1)*2+(1:2)) = Rot(Xrk(3,1))';
            end

            FX_obs = [FX_obs;Rot(Xrk(3,1))'*(Xfj(1:2,1)-Xrk(1:2,1))];
        end



        FX(:,3) = [FX_odo;FX_obs];

        Xold = X(:,3);

        % Jab = Rcon(Jab,CovT);

        % X_b = Rcon(Jab'*(Z(:,3)-FX(:,3)),CovT);
        % full(Jab)
        % DtX = Rcon(pinv(Jab'*Jab)*X_b,CovT);

        Xb = Jab'*(Z(:,3)-FX(:,3));
        DtX = (Jab'*Jab)\Xb;

        X(:,3) = X(:,3) + DtX;

        Xnew = X(:,3);

        D = Xnew - Xold;
        DD = D'*D;
        if DD < CC
            break
        end
    end

    figure(2)
    hold on
    plot(X(1:3:(poseNum*3-2),3),X(2:3:(poseNum*3-1),3),'bo');
    hold off

    save('X_GNI.mat','X')
else
    load('X_GNI.mat','X')
end

%% %%%%%%%%%%% find the suitable robot poses for R1 and R2 %%%%%%%%%%%%%
figure(3)
hold on
robPosiP = plot(X(1:3:(poseNum*3-2),3),X(2:3:(poseNum*3-1),3),'bo');
% for k = 1:poseNum
%     text(X((k-1)*3+1,3),X((k-1)*3+2,3),num2str(X((k-1)*3+1,2)),'Color','b')
% end

feaPosiP = plot(X(poseNum*3+(1:2:(feaNum*2-1)),3),X(poseNum*3+(2:2:(feaNum*2)),3),'r^');
hold off

% %% find pose with more than 8 shared features
% K = [];
% for k = 1:poseNum
%     Obs_k = Obs(Obs(:,1)==k,:);
% 
%     ObskNum = size(Obs_k,1)/2;
% 
%     %% 选第几步？
%     if ObskNum >= 8
%         K = [K;k];
% 
%         if k > 3000 && k < 4000
%             figure(3)
%             hold on
%             sharedPoseP = plot(X((k-1)*3+1,3),X((k-1)*3+2,3),'mo');
%             text(X((k-1)*3+1,3)-0.1,X((k-1)*3+2,3),num2str(k),'Color','m');
%             hold off
%         end
%     end
% 
%     %% 可以选3265步(65, 8)左右，现在找出方向
%     dist = sqrt((X((k-1)*3+1,3)-65)^2+(X((k-1)*3+2,3)-8)^2);
%     if dist < 5
%         figure(3)
%         hold on
%         shared3265P = plot(X((k-1)*3+1,3),X((k-1)*3+2,3),'go');
%         text(X((k-1)*3+1,3)+0.1,X((k-1)*3+2,3),num2str(k),'Color','g');
%         hold off
%     end   
% end

%% %%%%%%%%%% 可以选719步开始是R1,3265步开始是R2,两者前进方向相似 %%%%%%%%%%%%%%%%%%%%%

% R1初始位姿（第719步）使用高斯牛顿迭代后的保留后四位小数的值：[65.0492;7.7931;3.3150];
% R2初始位姿（第3265步）使用直接计算得到的保留后四位小数的值：[40.1386;-64.1211;-0.8182];

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

